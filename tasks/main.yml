- name: Create grafana user
  user:
    name: grafana
    create_home: no
    state: present
    system: yes

- name: Create docker network
  docker_network:
    name: grafana

- name: Start Grafana Image Renderer docker container
  docker_container:
    name: grafana-image-renderer
    image: "{{ grafana_image_renderer_docker_image }}"
    networks:
      - name: grafana
    user: "997:997"
    restart_policy: unless-stopped

- name: Start Grafana docker container
  docker_container:
    name: grafana
    image: "{{ grafana_docker_image }}"
    labels:
      traefik.enable: "true"
      traefik.http.routers.grafana.rule: "{{ grafana_traefik_router_rule }}"
      traefik.http.routers.grafana.entrypoints: "websecure"
      traefik.http.routers.grafana.tls.certresolver: "letsencrypt"
      traefik.http.services.grafana.loadbalancer.server.port: "3000"
      traefik.docker.network: grafana
    networks:
      - name: grafana
    user: "997:997"
    hostname: "{{ grafana_hostname }}"
    restart_policy: unless-stopped
    volumes:
      - "grafana:/var/lib/grafana"
    env:
      GF_ALERTING_ENABLED: "true"
      GF_ANALYTICS_CHECK_FOR_UPDATES: "false"
      GF_ANALYTICS_REPORTING_ENABLED: "false"
      GF_AUTH_BASIC_ENABLED: "true"
      GF_LOG_MODE: "console"
      GF_METRICS_ENABLED: "false"
      GF_SERVER_DOMAIN: "{{ grafana_hostname }}"
      GF_SERVER_ENABLE_GZIP: "true"
      GF_SERVER_ROOT_URL: "{{ grafana_server_root_url }}"
      GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_security_admin_password }}"
      # GF_SECURITY_COOKIE_SAMESITE: "strict"
      # GF_SECURITY_COOKIE_SECURE: "true"
      GF_SECURITY_DISABLE_GRAVATAR: "true"
      GF_SNAPSHOTS_EXTERNAL_ENABLED: "false"
      GF_RENDERING_SERVER_URL: http://grafana-image-renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_LOG_FILTERS: rendering:debug
      GF_EXTERNAL_IMAGE_STORAGE_PROVIDER: local
    # Restart container if env changes
    comparisons:
      env: strict
